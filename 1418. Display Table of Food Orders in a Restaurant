class Solution {
public:
    vector<vector<string>> displayTable(vector<vector<string>>& orders)     {
        set<string> dishes;
        map<int, map<string, int>> mp;
        
        for(vector<string>& order : orders)
        {
            mp[stoi(order[1])][order[2]]++;
            dishes.insert(order[2]);
        }
        
        vector<vector<string>> res;
        vector<string> header(dishes.begin(), dishes.end());
        
        header.insert(header.begin(), "Table");
        res.push_back(header);
        
        for(auto i : mp)
        {
            vector<string> row = {to_string(i.first)};
            for(int j = 1; j < header.size(); j++)
            {
                if(i.second.find(header[j]) == i.second.end())
                    row.push_back("0");
                else
                    row.push_back(to_string(i.second[header[j]]));
            }
            res.push_back(row);
        }
        
        return res;
    }
};

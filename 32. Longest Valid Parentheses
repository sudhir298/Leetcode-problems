class Solution {
public:
    
    int longestValidParentheses(string s)
    {
        int res=0;
        int n=s.length();

        // stack<int> st;
        // st.push(-1);
        // if(s=="")
        //     return 0;
        // for(int i=0;i<n;i++)
        // {
        //     if(s[i]=='(')
        //         st.push(i);
        //     else
        //     {
        //         st.pop();
        //         if(st.empty())
        //             st.push(i);
        //         else
        //         {
        //             int x=i-st.top();                
        //             res=max(x,res);
        //         }
        //     }
        // }
        //--------------ALTERNATIVE------------
        int open=0;
        int close=0;
        for(int i=0;i<n;i++)
        {
            if(s[i]=='(')
                open++;
            else
                close++;
            
            if(open==close)
                res=max(res,open+close);
            else if(close > open)
                open=close=0;
        }
        open=close=0;
        for(int i=n-1;i>=0;i--)
        {
            if(s[i]=='(')
                open++;
            else
                close++;
            
            if(open==close)
                res=max(res,open+close);
            else if(close < open)
                open=close=0;                
        }        
        return res;        
    }
};

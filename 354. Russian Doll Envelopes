class Solution {
public:
    int maxEnvelopes(vector<vector<int>>& envelopes) {
        int n = envelopes.size();
        
        vector<vector<int>> top;

        sort(envelopes.begin(), envelopes.end(),
            [](const vector<int>& v1, const vector<int>& v2){
                return (v1[0] == v2[0]) ? (v1[1] > v2[1]) : (v1[0] < v2[0]);
            });
        
        
        for(vector<int> p : envelopes)
        {
            int low = 0, high = top.size()-1;
            
            while(low <= high){
                int mid = low + (high-low)/2;
                
                if(top[mid][1] > p[1])
                    high = mid-1;
                else if(top[mid][1] == p[1])
                    high = mid-1;
                else if(top[mid][1] < p[1])
                    low = mid+1;
            }
            
            if(low == top.size())
                top.push_back(p);
            else
                top[low] = p;
        }

        return top.size();
    }
};

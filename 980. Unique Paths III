class Solution {
public:
    vector<int> a={1,-1,0,0};
    vector<int> b={0,0,1,-1};
    
    int travel(vector<vector<int>>& grid,int i,int j,int count)
    {
        if(i<0||j<0||i>=grid.size()||j>=grid[0].size() ||grid[i][j]==-1)
            return 0;
        
        if(grid[i][j]==2)
        {
            if(count==0)
                return 1;
            return 0;
        }
        int res = 0;
        
        grid[i][j] = -1;
        for(int k=0;k<4;k++)
            res+=travel(grid,i+a[k],j+b[k],count-1);
        
        grid[i][j] = 0;
        return res;
    }
    int uniquePathsIII(vector<vector<int>>& grid)
    {
        int p=-1,q=-1;
        int count=1;
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[0].size();j++)
                if(grid[i][j]==1)
                {
                    p=i;
                    q=j;
                }
                else if(grid[i][j]==0)
                    count++;
        }
        return travel(grid,p,q,count);
    }
};
